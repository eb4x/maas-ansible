---
- name: "create a dict with ethernet_ids under bond for {{ machine.hostname }}"
  set_fact:
    ethernet_ids: "{{ (ethernet_ids | default({})) | combine({ bond: (hostvars[machine.hostname].network.bonds[bond].interfaces | map('extract', interface_id ) | list) }) }}"
  with_items: "{{ hostvars[machine.hostname].network.bonds }}"
  loop_control:
    loop_var: bond

#- debug:
#    var: ethernet_ids[bond]
#  with_items: "{{ hostvars[machine.hostname].network.bonds }}"
#  loop_control:
#    loop_var: bond
#  when:
#    - hostvars[machine.hostname].network.bonds is defined
#    - bond not in (machine_interface_set | map(attribute='name') | list)

- name: "create bonds on {{ machine.hostname }}"
  uri:
    url: "{{ maas_base }}/MAAS/api/2.0/nodes/{{ machine.system_id }}/interfaces/?op=create_bond"
    method: POST
    headers:
      Authorization: "{{ Authorization }}"
    body:
      name: "{{ bond }}"
      parents: "{{ ethernet_ids[bond] }}"
      bond_mode: "{{ hostvars[machine.hostname].network.bonds[bond].parameters.mode | default('802.3ad') }}"
      bond_xmit_hash_policy: "{{ hostvars[machine.hostname].network.bonds[bond].parameters.xmit_hash_policy | default('layer3+4') }}"
    body_format: json
    return_content: true
  with_items: "{{ hostvars[machine.hostname].network.bonds }}"
  loop_control:
    loop_var: bond
  when:
    - bond not in (machine_interface_set | map(attribute='name') | list)
  register: _create_bonds
  changed_when: true

- name: "update machine_interface_set for {{ machine.hostname }} with new bonds"
  set_fact:
    machine_interface_set: "{{ machine_interface_set + [item.json] }}"
    interface_id: "{{ interface_id | combine({ item.json.name: item.json.id }) }}"
  with_items: "{{ _create_bonds.results }}"
  loop_control:
    label: "{{ item.bond }}"
  when:
    - item.json is defined
  changed_when: true
